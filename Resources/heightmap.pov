// Copyright (C) 2004 Nicolas P. Rougier (rougier@loria.fr)//// This program is free software; you can redistribute it and/or// modify it under the terms of the GNU General Public License// as published by the Free Software Foundation; either version 2// of the License, or (at your option) any later version.//// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.//// You should have received a copy of the GNU General Public License// along with this program; if not, write to the Free Software// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.// ---------------------------------------------------------------------------// Persistence of Vision Ray Tracer Scene Description File// File: heightmap.pov// Vers: 3.5// Desc: // Date: 04/2004// Auth: Nicolas Rougier// Cmd : nice +10 povray +Iheightmap.pov +w512 +h512 +fn +a0.1 +am2 +P +oheightmap.png// ---------------------------------------------------------------------------#version 3.5;#include "functions.inc"#include "colors.inc"// ========================================//  Notes// ========================================// ========================================//  Switches// ========================================#declare dune_scale       = 20;#declare dune_attenuation = 0.75;// ========================================//  Settings// ========================================global_settings {  hf_gray_16 on}// ========================================//  Camera// ========================================#declare EyePos  = <0.5, 0.5, 1.0>;#declare EyeLook = <0.5, 0.5, 0.0>;camera {  orthographic  location EyePos  up 1*y right 1*y  look_at EyeLook}// ========================================//  Height field// ========================================#declare wave_1 = pigment {  dents turbulence .333 octaves 3 lambda .75 omega 1.5  color_map {	[0,1 color rgb .5 color rgb 0]  }  ramp_wave}#declare wave_2 = pigment {  bumps turbulence .125 octaves 2 lambda 1.25 omega .5  color_map {	[0,1 color rgb 1 color rgb 0]  }  ramp_wave}#declare dune = function {  pigment {	average turbulence .125 octaves 2 lambda 1.5 omega .25    pigment_map {	  [0.5 wave_1 scale 0.5]      [1.0 wave_2 translate .25]    }    ramp_wave  }}plane {z, 0  pigment {	function {	  dune(x*dune_scale,y*dune_scale,z*dune_scale).grey	  //* pow(sin (x*pi/2),dune_attenuation)	}	color_map {[0 rgb 0] [1 rgb 1]}  }  finish {ambient 1}}